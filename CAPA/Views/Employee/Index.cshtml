



<div class="row">
    <div class="col-sm-12">
        <div class="card-box">

            <div class="well text-center" style="padding: 5px">
                <label>
                    Employee
                </label>
            </div>

            <div class="row">
                <div class="col-sm-12 m-b-15">
                    <a asp-controller="Employee" asp-action="Create" class="btn btn-success btn-sm" title="Add New Employee">
                        <i class="fa fa-plus" aria-hidden="true"></i> Add New
                    </a>
                </div>
            </div>

            <table class="table table-striped table-responsive" id="tbl_employee">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Display Name</th>
                        <th>Email</th>
                        <th>Is Active</th>
                        <th>Created At</th>
                        <th>Updated At</th>
                        <th>Updated By</th>
                        <th>Tindakan</th>
                    </tr>
                </thead>
            </table>
        </div><!--- div nya card-box --->
    </div>
</div>

@section tambahan_js {
    <script type="text/javascript">
                    let dataTableEmployee;

                    $(document).ready(function () {

                        dataTableEmployee = $("#tbl_employee").DataTable({
                            "processing": true, // A boolean property that when enables shows the processing indicator when the table is being processed.
                            "serverSide": true, // This property enables server-side processing
                            "filter": true, // enables/disables the search bar.
                            "ajax": { //used to fetch the data from external sources, in our case, API
                                "url": "/Employee/GetEmployees",
                                "type": "POST",
                                "datatype": "json"
                            },
                            "columnDefs": [
                                {
                                //Here we can define the properties of each column like visibility, isSearchable, and so on.
                                //Remember, the first column is Id? Let’s hide it from the Datatable and not include it in the search.
                                    "targets": [0],
                                    "visible": false,
                                    "searchable": false,
                                },
                                {
                                    "targets": [4],
                                    "render": function (data) {
                                        return moment(data).format('DD-MMM-YYYY HH:mm');
                                    },
                                },
                                {
                                    "targets": [5],
                                    "render": function (data) {
                                        return moment(data).format('DD-MMM-YYYY HH:mm');
                                    },
                                }
                            ],

                            "columns": [
                                //It is important to use camelCasing while defining the names of the variables.displayName will work.
                                //But DisplayName won’t.Quite weird, but that’s how js works.Make sure you follow camelCasing standard while working with js scripts.
                                { "data": "id", "name": "id", "autoWidth": true },
                                { "data": "display_name", "name": "display_name", "autoWidth": true },
                                { "data": "email", "name": "email", "autoWidth": true },
                                @*{ "data": "is_active", "name": "is_active", "autoWidth": true, "sortable": true },*@
                                {
                                    "data": "is_active", "name": "is_active", "autoWidth": true,
                                    "sClass": "text-center",
                                    "render": function (data, type, row) {
                                        if (data == 1) {
                                            return '<span class ="badge bg-success" style="text-transform: none;">Active</span>'
                                        }
                                        else {
                                            return '<span class="badge bg-warning" style="text-transform: none;">Not Active</span>'
                                        }
                                    }
                                },
                                { "data": "created_at", "name": "created_at", "autoWidth": true, "sortable": true },
                                { "data": "updated_at", "name": "updated_at", "autoWidth": true, "sortable": true },
                                { "data": "updated_by", "name": "updated_by", "autoWidth": true, "sortable": true },
                                {
                                    "render": function (data, type, row)
                                    {
                                        return "<a href='Employee/Update/" + row.id + "' class='btn btn-sm btn-danger'; >Edit</a>&nbsp;&nbsp;&nbsp;<a href='#' class='btn btn-sm btn-danger' onclick=DeleteEmployee('" + row.id + "'); >Delete</a>";
                                    },
                                    "sortable": false
                                },
                            ]
                        });


                    });

                    function DeleteEmployee(id) {
                        swal({
                            title: "Delete Id " + id + " ?",
                            text: "You will not be able to recover this record !",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonClass: 'btn-warning',
                            confirmButtonText: "Yes, delete it!",
                            closeOnConfirm: false
                        }, function (isConfirm) {
                                if (isConfirm) {
                                    $.ajax({
                                        type: "POST",
                                        url: "@Url.Action("Delete","Employee")",
                                        data: {
                                            id: id
                                        },
                                        traditional: true,
                                        success: function (result) {
                                            if (result.code == 200) {
                                                swal(result.message, "Click ok to proceed", "success");
                                                dataTableEmployee.ajax.reload();
                                            } else {
                                                swal({
                                                    title: "Something Wrong",
                                                    text: result.message,
                                                    type: "error"
                                                });
                                            }
                                        },
                                        error: function (result) {
                                            swal({
                                                title: "Error",
                                                text: result.message,
                                                type: "error"
                                            });
                                        }
                                    });
                                }
                        });
                    }

    </script>
}

